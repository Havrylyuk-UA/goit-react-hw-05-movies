{"version":3,"file":"static/js/521.66bececa.chunk.js","mappings":"+PAiDA,EA3Ca,WACX,IAAAA,GAA4BC,EAAAA,EAAAA,UAAS,CAAC,GAAEC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAjCI,EAAMF,EAAA,GAAEG,EAASH,EAAA,GAEhBI,GAAYC,EAAAA,EAAAA,MAAZD,QAeR,OAbAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAW,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAA,OAAAF,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,GAEGC,EAAAA,EAAAA,GAAUZ,GAAS,KAAD,EAA/BQ,EAAIC,EAAAI,KACVd,EAAUS,GAAMC,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAK,GAAAL,EAAA,SAEhBM,QAAQC,IAAGP,EAAAK,IAAQ,yBAAAL,EAAAQ,OAAA,GAAAV,EAAA,kBAEtB,kBAPgB,OAAAH,EAAAc,MAAA,KAAAC,UAAA,KASjBhB,GACF,GAAG,CAACH,KAGFoB,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACEF,EAAAA,EAAAA,KAAA,MAAIG,UAAU,mBAAkBD,SAC7BxB,EAAO0B,KACN1B,EAAO0B,KACJC,QAAO,SAAAC,GAAI,OAAIA,EAAKC,YAAY,IAChCC,KAAI,SAAAF,GAAI,OACPG,EAAAA,EAAAA,MAAA,MAAkBN,UAAU,kBAAiBD,SAAA,EAC3CF,EAAAA,EAAAA,KAAA,OACEU,IAAG,sCAAAC,OAAwCL,EAAKC,cAChDK,IAAKN,EAAKO,KACVV,UAAU,oBAEZM,EAAAA,EAAAA,MAAA,KAAGN,UAAU,kBAAiBD,SAAA,CAAC,SAAOI,EAAKO,SAC3CJ,EAAAA,EAAAA,MAAA,KAAGN,UAAU,kBAAiBD,SAAA,CAAC,cAAYI,EAAKQ,eAPzCR,EAAKS,GAQT,KAGTf,EAAAA,EAAAA,KAAA,KAAAE,SAAG,sCAKb,C,2IC7CMc,EAAW,gCACXC,EAAU,mCAEVC,EAAkB,SAGxB,SAASC,IACP,IAAMC,EAAS,IAAIC,gBAAgB,CACjCC,QAASL,EACTM,SAAU,QACVC,KAAM,IACNC,eAAe,EACfC,SAAU,OAGZ,OAAOC,EAAAA,EAAAA,IACA,GAADhB,OAAIK,GAAQL,OAdE,qBAcc,KAAAA,OAAIS,IACnCQ,MAAK,SAAA5C,GAAO,OAAAA,EAAJI,IAAe,GAC5B,CAgBA,SAASyC,EAAad,GACpB,IAAMK,EAAS,IAAIC,gBAAgB,CACjCC,QAASL,IAGX,OAAOU,EAAAA,EAAAA,IACA,GAADhB,OAAIK,GAAQL,OAAGO,EAAe,KAAAP,OAAII,EAAE,KAAAJ,OAAIS,IAC3CQ,MAAK,SAAAE,GAAO,OAAAA,EAAJ1C,IAAe,GAC5B,CAEA,SAASI,EAAUuB,GACjB,IAAMK,EAAS,IAAIC,gBAAgB,CACjCC,QAASL,IAGX,OAAOU,EAAAA,EAAAA,IACA,GAADhB,OAAIK,GAAQL,OAAGO,EAAe,KAAAP,OAAII,EAAE,aAAAJ,OAAYS,IACnDQ,MAAK,SAAAG,GAAO,OAAAA,EAAJ3C,IAAe,GAC5B,CAEA,SAAS4C,EAAYjB,GACnB,IAAMK,EAAS,IAAIC,gBAAgB,CACjCC,QAASL,IAGX,OAAOU,EAAAA,EAAAA,IACA,GAADhB,OAAIK,GAAQL,OAAGO,EAAe,KAAAP,OAAII,EAAE,aAAAJ,OAAYS,IACnDQ,MAAK,SAAAK,GAAO,OAAAA,EAAJ7C,IAAe,GAC5B,C","sources":["components/Cast/Cast.jsx","services/api.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchCast } from '../../services/api';\n\nimport './Cast.css';\n\nconst Cast = () => {\n  const [actors, setActors] = useState({});\n\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const requestCast = async () => {\n      try {\n        const data = await fetchCast(movieId);\n        setActors(data);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    requestCast();\n  }, [movieId]);\n\n  return (\n    <>\n      <ul className=\"movie_cast-sheet\">\n        {actors.cast ? (\n          actors.cast\n            .filter(item => item.profile_path)\n            .map(item => (\n              <li key={item.id} className=\"movie_cast-list\">\n                <img\n                  src={`https://image.tmdb.org/t/p/original${item.profile_path}`}\n                  alt={item.name}\n                  className=\"movie_cast-img\"\n                />\n                <p className=\"movie_cast-desc\">Name: {item.name}</p>\n                <p className=\"movie_cast-desc\">Character: {item.character}</p>\n              </li>\n            ))\n        ) : (\n          <p>No cast information available.</p>\n        )}\n      </ul>\n    </>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '97a728d5e36b3098a7641152faaa0175';\nconst REQUEST_TREND = 'trending/movie/day';\nconst REQUEST_DETAILS = 'movie/';\nconst REQUEST_SEARCH = 'search/movie';\n\nfunction fetchTrend() {\n  const params = new URLSearchParams({\n    api_key: API_KEY,\n    language: 'en-US',\n    page: '1',\n    include_adult: false,\n    per_page: '20',\n  });\n\n  return axios\n    .get(`${BASE_URL}${REQUEST_TREND}?${params}`)\n    .then(({ data }) => data);\n}\n\nfunction fetchSearch(query) {\n  const params = new URLSearchParams({\n    api_key: API_KEY,\n    language: 'en-US',\n    include_adult: false,\n    query: query,\n    page: '1',\n  });\n\n  return axios\n    .get(`${BASE_URL}${REQUEST_SEARCH}?${params}`)\n    .then(({ data }) => data);\n}\n\nfunction fetchDetails(id) {\n  const params = new URLSearchParams({\n    api_key: API_KEY,\n  });\n\n  return axios\n    .get(`${BASE_URL}${REQUEST_DETAILS}/${id}?${params}`)\n    .then(({ data }) => data);\n}\n\nfunction fetchCast(id) {\n  const params = new URLSearchParams({\n    api_key: API_KEY,\n  });\n\n  return axios\n    .get(`${BASE_URL}${REQUEST_DETAILS}/${id}/credits?${params}`)\n    .then(({ data }) => data);\n}\n\nfunction fetchReview(id) {\n  const params = new URLSearchParams({\n    api_key: API_KEY,\n  });\n\n  return axios\n    .get(`${BASE_URL}${REQUEST_DETAILS}/${id}/reviews?${params}`)\n    .then(({ data }) => data);\n}\n\nexport { fetchTrend, fetchSearch, fetchDetails, fetchCast, fetchReview };\n"],"names":["_useState","useState","_useState2","_slicedToArray","actors","setActors","movieId","useParams","useEffect","requestCast","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","data","_context","prev","next","fetchCast","sent","t0","console","log","stop","apply","arguments","_jsx","_Fragment","children","className","cast","filter","item","profile_path","map","_jsxs","src","concat","alt","name","character","id","BASE_URL","API_KEY","REQUEST_DETAILS","fetchTrend","params","URLSearchParams","api_key","language","page","include_adult","per_page","axios","then","fetchDetails","_ref3","_ref4","fetchReview","_ref5"],"sourceRoot":""}