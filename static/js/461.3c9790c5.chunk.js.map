{"version":3,"file":"static/js/461.3c9790c5.chunk.js","mappings":"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","sources":["components/MovieList/MovieList.jsx","pages/HomePage.jsx","services/api.js"],"sourcesContent":["import { NavLink, useLocation } from 'react-router-dom';\nimport './MovieList.css';\n\nconst MovieList = ({ popular }) => {\n  const location = useLocation();\n\n  return (\n    <>\n      <ul className=\"movie_list-sheet\">\n        {popular.map(\n          ({ id, poster_path, original_title, title, vote_average }) => (\n            <li key={id} className=\"movie_list-item\">\n              <NavLink\n                to={`/movies/${id}`}\n                state={location}\n                className=\"movie_list-link\"\n              >\n                <img\n                  src={`https://image.tmdb.org/t/p/original${poster_path}`}\n                  alt={original_title}\n                  className=\"movie_list-img\"\n                />\n                <p className=\"movie_list-desc\">{title}</p>\n                <p className=\"movie_list-desc\">Rating {vote_average}</p>\n              </NavLink>\n            </li>\n          )\n        )}\n      </ul>\n    </>\n  );\n};\n\nexport default MovieList;\n","import { fetchTrend } from 'services/api';\n\nimport { useEffect, useState } from 'react';\nimport MovieList from 'components/MovieList/MovieList';\n\nconst HomePage = () => {\n  const [movie, setMovie] = useState([]);\n\n  useEffect(() => {\n    const requestTrend = async () => {\n      try {\n        const trend = await fetchTrend();\n\n        setMovie(trend.results);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    requestTrend();\n  }, []);\n\n  return (\n    <>\n      <MovieList popular={movie} />\n    </>\n  );\n};\n\nexport default HomePage;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '97a728d5e36b3098a7641152faaa0175';\nconst REQUEST_TREND = 'trending/movie/day';\nconst REQUEST_DETAILS = 'movie/';\nconst REQUEST_SEARCH = 'search/movie';\n\nfunction fetchTrend() {\n  const params = new URLSearchParams({\n    api_key: API_KEY,\n    language: 'en-US',\n    page: '1',\n    include_adult: false,\n    per_page: '20',\n  });\n\n  return axios\n    .get(`${BASE_URL}${REQUEST_TREND}?${params}`)\n    .then(({ data }) => data);\n}\n\nfunction fetchSearch(query) {\n  const params = new URLSearchParams({\n    api_key: API_KEY,\n    language: 'en-US',\n    include_adult: false,\n    query: query,\n    page: '1',\n  });\n\n  return axios\n    .get(`${BASE_URL}${REQUEST_SEARCH}?${params}`)\n    .then(({ data }) => data);\n}\n\nfunction fetchDetails(id) {\n  const params = new URLSearchParams({\n    api_key: API_KEY,\n  });\n\n  return axios\n    .get(`${BASE_URL}${REQUEST_DETAILS}/${id}?${params}`)\n    .then(({ data }) => data);\n}\n\nfunction fetchCast(id) {\n  const params = new URLSearchParams({\n    api_key: API_KEY,\n  });\n\n  return axios\n    .get(`${BASE_URL}${REQUEST_DETAILS}/${id}/credits?${params}`)\n    .then(({ data }) => data);\n}\n\nfunction fetchReview(id) {\n  const params = new URLSearchParams({\n    api_key: API_KEY,\n  });\n\n  return axios\n    .get(`${BASE_URL}${REQUEST_DETAILS}/${id}/reviews?${params}`)\n    .then(({ data }) => data);\n}\n\nexport { fetchTrend, fetchSearch, fetchDetails, fetchCast, fetchReview };\n"],"names":["_ref","popular","location","useLocation","_jsx","_Fragment","children","className","map","_ref2","id","poster_path","original_title","title","vote_average","_jsxs","NavLink","to","concat","state","src","alt","_useState","useState","_useState2","_slicedToArray","movie","setMovie","useEffect","requestTrend","_asyncToGenerator","_regeneratorRuntime","_callee","trend","_context","prev","next","fetchTrend","sent","results","t0","console","log","stop","apply","arguments","MovieList","BASE_URL","API_KEY","REQUEST_DETAILS","params","URLSearchParams","api_key","language","page","include_adult","per_page","axios","then","data","fetchDetails","_ref3","fetchCast","_ref4","fetchReview","_ref5"],"sourceRoot":""}