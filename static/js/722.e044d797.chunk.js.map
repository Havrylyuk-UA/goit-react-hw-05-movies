{"version":3,"file":"static/js/722.e044d797.chunk.js","mappings":"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","sources":["components/Loader/Loader.jsx","components/SearchForm/SearchForm.jsx","pages/MoviesPage.jsx","services/api.js"],"sourcesContent":["import { Hourglass } from 'react-loader-spinner';\n\nconst Loader = () => {\n  return (\n    <Hourglass\n      visible={true}\n      height=\"80\"\n      width=\"80\"\n      ariaLabel=\"hourglass-loading\"\n      wrapperStyle={{}}\n      wrapperClass=\"\"\n      colors={['#306cce', '#72a1ed']}\n    />\n  );\n};\n\nexport default Loader;\n","import { useState } from 'react';\n\nimport './SearchForm.css';\n\nconst SearchForm = ({ handleSubmit }) => {\n  const [word, setWord] = useState('');\n\n  const handlePushWord = e => {\n    e.preventDefault();\n    handleSubmit(word.toLowerCase().trim());\n    clearForm();\n  };\n\n  const clearForm = () => {\n    setWord('');\n  };\n\n  const handleChangeWord = e => {\n    const targetWord = e.target.value;\n    setWord(targetWord);\n  };\n\n  return (\n    <form className=\"search_form\" onSubmit={handlePushWord}>\n      <input\n        type=\"text\"\n        name=\"search\"\n        autoComplete=\"off\"\n        autoFocus\n        className=\"search_form-input\"\n        placeholder=\"Please, input movie name\"\n        onChange={handleChangeWord}\n        value={word}\n      />\n      <button type=\"submit\" className=\"search_form-btn\">\n        Search\n      </button>\n    </form>\n  );\n};\n\nexport default SearchForm;\n","import SearchForm from 'components/SearchForm/SearchForm';\nimport { useState, useEffect } from 'react';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\n\nimport { fetchSearch } from 'services/api';\n\nimport '../components/MovieList/MovieList.css';\nimport Loader from 'components/Loader/Loader';\n\nconst MoviesPage = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [findMovie, setFindMovie] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  const location = useLocation();\n\n  useEffect(() => {\n    if (!searchParams) return;\n    const requestSearch = async () => {\n      try {\n        setLoading(true);\n        const search = await fetchSearch(searchParams);\n\n        setFindMovie(search.results);\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    requestSearch();\n  }, [searchParams]);\n\n  const defaultImg =\n    'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700';\n\n  const foundMovies = findMovie.map(\n    ({ id, poster_path, original_title, title, vote_average }) => (\n      <li key={id} className=\"movie_list-item\">\n        <Link\n          to={`/movies/${id}`}\n          state={{ from: location }}\n          className=\"movie_list-link\"\n        >\n          <img\n            src={\n              poster_path\n                ? `https://image.tmdb.org/t/p/original${poster_path}`\n                : defaultImg\n            }\n            alt={original_title}\n            className=\"movie_list-img\"\n          />\n          <p className=\"movie_list-desc\">{title}</p>\n          <p className=\"movie_list-desc\">Rating {vote_average}</p>\n        </Link>\n      </li>\n    )\n  );\n\n  return (\n    <>\n      <SearchForm handleSubmit={setSearchParams} />\n      <ul className=\"movie_list-sheet\">\n        {loading && <Loader />}\n        {findMovie && foundMovies}\n      </ul>\n    </>\n  );\n};\n\nexport default MoviesPage;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '97a728d5e36b3098a7641152faaa0175';\nconst REQUEST_TREND = 'trending/movie/day';\nconst REQUEST_DETAILS = 'movie/';\nconst REQUEST_SEARCH = 'search/movie';\n\nfunction fetchTrend() {\n  const params = new URLSearchParams({\n    api_key: API_KEY,\n    language: 'en-US',\n    page: '1',\n    include_adult: false,\n    per_page: '20',\n  });\n\n  return axios\n    .get(`${BASE_URL}${REQUEST_TREND}?${params}`)\n    .then(({ data }) => data);\n}\n\nfunction fetchSearch(query) {\n  const params = new URLSearchParams({\n    api_key: API_KEY,\n    language: 'en-US',\n    include_adult: false,\n    query: query,\n    page: '1',\n  });\n\n  return axios\n    .get(`${BASE_URL}${REQUEST_SEARCH}?${params}`)\n    .then(({ data }) => data);\n}\n\nfunction fetchDetails(id) {\n  const params = new URLSearchParams({\n    api_key: API_KEY,\n  });\n\n  return axios\n    .get(`${BASE_URL}${REQUEST_DETAILS}/${id}?${params}`)\n    .then(({ data }) => data);\n}\n\nfunction fetchCast(id) {\n  const params = new URLSearchParams({\n    api_key: API_KEY,\n  });\n\n  return axios\n    .get(`${BASE_URL}${REQUEST_DETAILS}/${id}/credits?${params}`)\n    .then(({ data }) => data);\n}\n\nfunction fetchReview(id) {\n  const params = new URLSearchParams({\n    api_key: API_KEY,\n  });\n\n  return axios\n    .get(`${BASE_URL}${REQUEST_DETAILS}/${id}/reviews?${params}`)\n    .then(({ data }) => data);\n}\n\nexport { fetchTrend, fetchSearch, fetchDetails, fetchCast, fetchReview };\n"],"names":["_jsx","Hourglass","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","colors","_ref","handleSubmit","_useState","useState","_useState2","_slicedToArray","word","setWord","clearForm","_jsxs","className","onSubmit","e","preventDefault","toLowerCase","trim","children","type","name","autoComplete","autoFocus","placeholder","onChange","targetWord","target","value","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","findMovie","setFindMovie","_useState3","_useState4","loading","setLoading","location","useLocation","useEffect","requestSearch","_asyncToGenerator","_regeneratorRuntime","_callee","search","_context","prev","next","fetchSearch","sent","results","t0","console","log","finish","stop","apply","arguments","foundMovies","map","_ref2","id","poster_path","original_title","title","vote_average","Link","to","concat","state","from","src","alt","_Fragment","SearchForm","Loader","BASE_URL","API_KEY","REQUEST_DETAILS","fetchTrend","params","URLSearchParams","api_key","language","page","include_adult","per_page","axios","then","data","query","fetchDetails","_ref3","fetchCast","_ref4","fetchReview","_ref5"],"sourceRoot":""}