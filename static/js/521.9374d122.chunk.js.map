{"version":3,"file":"static/js/521.9374d122.chunk.js","mappings":"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","sources":["components/Cast/Cast.jsx","components/Loader/Loader.jsx","services/api.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchCast } from '../../services/api';\n\nimport './Cast.css';\nimport Loader from 'components/Loader/Loader';\n\nconst Cast = () => {\n  const [actors, setActors] = useState({});\n  const [loading, setLoading] = useState(false);\n\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    if (!movieId) return;\n\n    const requestCast = async () => {\n      try {\n        setLoading(true);\n        const data = await fetchCast(movieId);\n\n        setActors(data);\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    requestCast();\n  }, [movieId]);\n\n  const defaultImg =\n    'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700';\n\n  return (\n    <>\n      {loading && <Loader />}\n      {actors.cast && (\n        <ul className=\"movie_cast-sheet\">\n          {actors.cast.map(item => (\n            <li key={item.id} className=\"movie_cast-list\">\n              <img\n                src={\n                  item.profile_path\n                    ? `https://image.tmdb.org/t/p/original${item.profile_path}`\n                    : defaultImg\n                }\n                alt={item.name}\n                className=\"movie_cast-img\"\n              />\n              <p className=\"movie_cast-desc\">Name: {item.name}</p>\n              <p className=\"movie_cast-desc\">Character: {item.character}</p>\n            </li>\n          ))}\n        </ul>\n      )}\n      {!actors.cast && (\n        <p\n          style={{\n            textAlign: 'center',\n            color: 'aliceblue',\n            marginLeft: '15px',\n            backgroundColor: 'rgb(201, 72, 72)',\n          }}\n        >\n          No cast information available.\n        </p>\n      )}\n    </>\n  );\n};\n\nexport default Cast;\n","import { Hourglass } from 'react-loader-spinner';\n\nconst Loader = () => {\n  return (\n    <Hourglass\n      visible={true}\n      height=\"80\"\n      width=\"80\"\n      ariaLabel=\"hourglass-loading\"\n      wrapperStyle={{}}\n      wrapperClass=\"\"\n      colors={['#306cce', '#72a1ed']}\n    />\n  );\n};\n\nexport default Loader;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '97a728d5e36b3098a7641152faaa0175';\nconst REQUEST_TREND = 'trending/movie/day';\nconst REQUEST_DETAILS = 'movie/';\nconst REQUEST_SEARCH = 'search/movie';\n\nfunction fetchTrend() {\n  const params = new URLSearchParams({\n    api_key: API_KEY,\n    language: 'en-US',\n    page: '1',\n    include_adult: false,\n    per_page: '20',\n  });\n\n  return axios\n    .get(`${BASE_URL}${REQUEST_TREND}?${params}`)\n    .then(({ data }) => data);\n}\n\nfunction fetchSearch(query) {\n  const params = new URLSearchParams({\n    api_key: API_KEY,\n    language: 'en-US',\n    include_adult: false,\n    query: query,\n    page: '1',\n  });\n\n  return axios\n    .get(`${BASE_URL}${REQUEST_SEARCH}?${params}`)\n    .then(({ data }) => data);\n}\n\nfunction fetchDetails(id) {\n  const params = new URLSearchParams({\n    api_key: API_KEY,\n  });\n\n  return axios\n    .get(`${BASE_URL}${REQUEST_DETAILS}/${id}?${params}`)\n    .then(({ data }) => data);\n}\n\nfunction fetchCast(id) {\n  const params = new URLSearchParams({\n    api_key: API_KEY,\n  });\n\n  return axios\n    .get(`${BASE_URL}${REQUEST_DETAILS}/${id}/credits?${params}`)\n    .then(({ data }) => data);\n}\n\nfunction fetchReview(id) {\n  const params = new URLSearchParams({\n    api_key: API_KEY,\n  });\n\n  return axios\n    .get(`${BASE_URL}${REQUEST_DETAILS}/${id}/reviews?${params}`)\n    .then(({ data }) => data);\n}\n\nexport { fetchTrend, fetchSearch, fetchDetails, fetchCast, fetchReview };\n"],"names":["_useState","useState","_useState2","_slicedToArray","actors","setActors","_useState3","_useState4","loading","setLoading","movieId","useParams","useEffect","requestCast","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","data","_context","prev","next","fetchCast","sent","t0","console","log","finish","stop","apply","arguments","_jsxs","_Fragment","children","_jsx","Loader","cast","className","map","item","src","profile_path","concat","alt","name","character","id","style","textAlign","color","marginLeft","backgroundColor","Hourglass","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","colors","BASE_URL","API_KEY","REQUEST_DETAILS","fetchTrend","params","URLSearchParams","api_key","language","page","include_adult","per_page","axios","then","fetchSearch","query","_ref2","fetchDetails","_ref3","_ref4","fetchReview","_ref5"],"sourceRoot":""}